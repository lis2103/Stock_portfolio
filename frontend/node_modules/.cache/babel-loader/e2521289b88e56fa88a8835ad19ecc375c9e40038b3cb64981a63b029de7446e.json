{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pante\\\\OneDrive\\\\\\u0388\\u03B3\\u03B3\\u03C1\\u03B1\\u03C6\\u03B1\\\\Capestone project\\\\frontend\\\\src\\\\content.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Table, TableHeader, TableColumn, TableBody, TableRow, TableCell } from \"@nextui-org/react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = ({\n  marginTop = \"20px\"\n}) => {\n  _s();\n  const location = useLocation();\n  const [stockInfo, setStockInfo] = useState([]);\n  const {\n    ticker\n  } = useParams();\n  const isSummaryPage = location.pathname.includes(\"summary\") || typeof ticker === \"undefined\";\n  useEffect(() => {\n    if (ticker) {\n      fetch(`https://mcsbt-integration-416413.lm.r.appspot.com/${ticker}`).then(response => response.json()).then(data => {\n        if (data && data.stock_info) {\n          let formattedData = Object.entries(data.stock_info).map(([date, info]) => ({\n            date,\n            open: parseFloat(info[\"1. open\"]),\n            high: parseFloat(info[\"2. high\"]),\n            low: parseFloat(info[\"3. low\"]),\n            close: parseFloat(info[\"4. close\"]),\n            volume: parseInt(info[\"5. volume\"], 10)\n          }));\n          formattedData.sort((a, b) => b.date.localeCompare(a.date));\n          setStockInfo(formattedData);\n        } else {\n          console.error(\"Missing or invalid stock_info data\");\n          setStockInfo([]);\n        }\n      }).catch(error => {\n        console.error(\"Error fetching stock information:\", error);\n        setStockInfo([]);\n      });\n    }\n  }, [ticker]);\n  const displayTicker = ticker ? ticker.toUpperCase() : \"N/A\";\n  if (isSummaryPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop,\n        width: \"100%\",\n        maxWidth: \"800px\",\n        textAlign: \"center\",\n        color: \"green\",\n        background: \"purple\",\n        padding: \"20px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 4px 14px 0 rgba(0,0,0,0.1)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LISTOCK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Prepare the data for the graph\n  const graphData = stockInfo.map(info => ({\n    name: info.date,\n    Open: info.open,\n    High: info.high,\n    Low: info.low,\n    Close: info.close\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop,\n      width: \"100%\",\n      maxWidth: \"800px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"purple\",\n        margin: \"0 0 20px\",\n        fontWeight: \"800\",\n        fontSize: \"20px\"\n      },\n      children: [displayTicker, \" ($)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: graphData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"Close\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Content, \"Qt+PsKOLK1uaiQxOEjQy+mndrGo=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useParams","Table","TableHeader","TableColumn","TableBody","TableRow","TableCell","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Content","marginTop","_s","location","stockInfo","setStockInfo","ticker","isSummaryPage","pathname","includes","fetch","then","response","json","data","stock_info","formattedData","Object","entries","map","date","info","open","parseFloat","high","low","close","volume","parseInt","sort","a","b","localeCompare","console","error","catch","displayTicker","toUpperCase","style","width","maxWidth","textAlign","color","background","padding","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","graphData","name","Open","High","Low","Close","margin","fontWeight","fontSize","height","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/pante/OneDrive/Έγγραφα/Capestone project/frontend/src/content.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableColumn,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@nextui-org/react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst Content = ({ marginTop = \"20px\" }) => {\r\n  const location = useLocation();\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const { ticker } = useParams();\r\n\r\n  const isSummaryPage =\r\n    location.pathname.includes(\"summary\") || typeof ticker === \"undefined\";\r\n\r\n  useEffect(() => {\r\n    if (ticker) {\r\n      fetch(`https://mcsbt-integration-416413.lm.r.appspot.com/${ticker}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data && data.stock_info) {\r\n            let formattedData = Object.entries(data.stock_info).map(\r\n              ([date, info]) => ({\r\n                date,\r\n                open: parseFloat(info[\"1. open\"]),\r\n                high: parseFloat(info[\"2. high\"]),\r\n                low: parseFloat(info[\"3. low\"]),\r\n                close: parseFloat(info[\"4. close\"]),\r\n                volume: parseInt(info[\"5. volume\"], 10),\r\n              })\r\n            );\r\n            formattedData.sort((a, b) => b.date.localeCompare(a.date));\r\n            setStockInfo(formattedData);\r\n          } else {\r\n            console.error(\"Missing or invalid stock_info data\");\r\n            setStockInfo([]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching stock information:\", error);\r\n          setStockInfo([]);\r\n        });\r\n    }\r\n  }, [ticker]);\r\n\r\n  const displayTicker = ticker ? ticker.toUpperCase() : \"N/A\";\r\n\r\n  if (isSummaryPage) {\r\n    return (\r\n      <div\r\n        style={{\r\n          marginTop,\r\n          width: \"100%\",\r\n          maxWidth: \"800px\",\r\n          textAlign: \"center\",\r\n          color: \"green\",\r\n          background: \"purple\",\r\n          padding: \"20px\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 4px 14px 0 rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <h1>LISTOCK</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Prepare the data for the graph\r\n  const graphData = stockInfo.map((info) => ({\r\n    name: info.date,\r\n    Open: info.open,\r\n    High: info.high,\r\n    Low: info.low,\r\n    Close: info.close,\r\n  }));\r\n\r\n  return (\r\n    <div style={{ marginTop, width: \"100%\", maxWidth: \"800px\" }}>\r\n      <h2\r\n        style={{\r\n          color: \"purple\",\r\n          margin: \"0 0 20px\",\r\n          fontWeight: \"800\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        {displayTicker} ($)\r\n      </h2>\r\n      {/* Render the table as before */}\r\n      <Table aria-label=\"Stock\">\r\n        {/* Table rows and columns remain unchanged */}\r\n      </Table>\r\n      {/* Graph rendering */}\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={graphData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Line type=\"monotone\" dataKey=\"Close\" stroke=\"#8884d8\" />\r\n          {/* You can add more lines for Open, High, Low if needed */}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}