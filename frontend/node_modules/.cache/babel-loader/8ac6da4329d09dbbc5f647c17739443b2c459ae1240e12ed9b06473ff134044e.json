{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pante\\\\OneDrive\\\\\\u0388\\u03B3\\u03B3\\u03C1\\u03B1\\u03C6\\u03B1\\\\Capestone project\\\\frontend\\\\src\\\\components\\\\StockDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\n// Added username to the component's props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockDetails = ({\n  ticker,\n  username\n}) => {\n  _s();\n  const [details, setDetails] = useState({\n    ticker: \"\",\n    quantity: 0\n  });\n  useEffect(() => {\n    const fetchStockDetails = async () => {\n      // Assuming you want to fetch the details for a specific stock (this endpoint might need to be adjusted)\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/stock-detail/${ticker}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}` // Using the token for authenticated requests\n        }\n      });\n      const stockDetails = response.data.find(stock => stock.ticker === ticker);\n      if (stockDetails) {\n        setDetails(stockDetails);\n      }\n    };\n    fetchStockDetails();\n  }, [ticker]);\n  const handleQuantityChange = e => {\n    setDetails(prevDetails => ({\n      ...prevDetails,\n      quantity: e.target.value\n    }));\n  };\n  const updateQuantity = async () => {\n    // Placeholder for the update functionality\n    console.log(\"Updating quantity to\", details.quantity);\n    // Implement the API call to update the quantity here\n  };\n  const removeStock = async () => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_API_URL}/remove-stock/${username}/${ticker}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      // Handle success (e.g., refreshing the list of stocks)\n      console.log(`${ticker} stock removed successfully`);\n    } catch (error) {\n      console.error(\"Failed to remove stock\", error);\n      // Handle error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Stock Details for \", ticker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: details.quantity,\n          onChange: handleQuantityChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: updateQuantity,\n        children: \"Update Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: removeStock,\n        className: \"ms-2\",\n        children: \"Remove Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(StockDetails, \"XnAszE5ril/EBL8OcJOXxwGK5pg=\");\n_c = StockDetails;\nexport default StockDetails;\nvar _c;\n$RefreshReg$(_c, \"StockDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Button","jsxDEV","_jsxDEV","StockDetails","ticker","username","_s","details","setDetails","quantity","fetchStockDetails","response","get","process","env","REACT_APP_API_URL","headers","Authorization","localStorage","getItem","stockDetails","data","find","stock","handleQuantityChange","e","prevDetails","target","value","updateQuantity","console","log","removeStock","delete","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","Label","Control","type","onChange","variant","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/pante/OneDrive/Έγγραφα/Capestone project/frontend/src/components/StockDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// Added username to the component's props\r\nconst StockDetails = ({ ticker, username }) => {\r\n  const [details, setDetails] = useState({ ticker: \"\", quantity: 0 });\r\n\r\n  useEffect(() => {\r\n    const fetchStockDetails = async () => {\r\n      // Assuming you want to fetch the details for a specific stock (this endpoint might need to be adjusted)\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/stock-detail/${ticker}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Using the token for authenticated requests\r\n          },\r\n        }\r\n      );\r\n      const stockDetails = response.data.find(\r\n        (stock) => stock.ticker === ticker\r\n      );\r\n      if (stockDetails) {\r\n        setDetails(stockDetails);\r\n      }\r\n    };\r\n\r\n    fetchStockDetails();\r\n  }, [ticker]);\r\n\r\n  const handleQuantityChange = (e) => {\r\n    setDetails((prevDetails) => ({ ...prevDetails, quantity: e.target.value }));\r\n  };\r\n\r\n  const updateQuantity = async () => {\r\n    // Placeholder for the update functionality\r\n    console.log(\"Updating quantity to\", details.quantity);\r\n    // Implement the API call to update the quantity here\r\n  };\r\n\r\n  const removeStock = async () => {\r\n    try {\r\n      await axios.delete(\r\n        `${process.env.REACT_APP_API_URL}/remove-stock/${username}/${ticker}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      // Handle success (e.g., refreshing the list of stocks)\r\n      console.log(`${ticker} stock removed successfully`);\r\n    } catch (error) {\r\n      console.error(\"Failed to remove stock\", error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Stock Details for {ticker}</h3>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={details.quantity}\r\n            onChange={handleQuantityChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={updateQuantity}>\r\n          Update Quantity\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={removeStock} className=\"ms-2\">\r\n          Remove Stock\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}